<% head do %>
  <%= javascript_include_tag 'jit' %>
  <!--[if IE]><%= javascript_include_tag 'excanvas' %><![endif]-->
  <%= javascript_include_tag 'jquery.qtip' %>
<% end %>

<% content_title "Usage Analysis" %>

<div style="margin-bottom: 14px; z-order: 0;">

  <%= form_for @heat_map, :url => '' do |f| %>

    <%= error_messages_for @heat_map %>

    <table width="100%">
      <tr>
        <td width="120px"><%= label_tag :enquiry %>:</td>
        <td class="field"><%= f.select :enquiry, @heat_map.enquiry_types.collect {|klass| [klass.display_name, klass.name]}, {}, { :class => 'dropdown', :style => 'width: 420px;' } %></td>
      </tr>
      <tr>
        <td>From:</td>
        <td class="field"><%= f.date_picker :date_from %></td>
      </tr>
      <tr>
        <td>To:</td>
        <td class="field"><%= f.date_picker :date_to %></td>
      </tr>
      <tr>
        <td colspan="2" align="right">
          <%= f.submit 'Update Displayed Data' %>
        </td>
      </tr>
    </table>
    
  <% end %>
  
</div>

<div style="height: 32px; display: none;">
  <div id="ajax_working">Loading heat map...</div>
</div>

<div id="treemap-display" style="height: 500px; border: 1px solid #C0C0C0;">
</div>    

<table width="100%" style="margin-top: 2px; border-spacing: 0; height: 4px;">
  <tr>
    <% HeatMapColorSupport.color_table.each do |color| %>
      <td style="background-color: <%= color.to_s %>"></td>
    <% end %>
  </tr>
</table>

<div style="margin-top: 14px;">
  <input id="go_to_parent" type="button" class="button" value="Back" />
</div>

<script type="text/javascript">
  var json = {
    "id": "root", 
    "name": "<%= @heat_map.enquiry_type.display_name %>",
    "children": [<%= @heat_map.json %>]
  };
</script>
  
<script type="text/javascript">

  var labelType, useGradients, nativeTextSupport, animate;

  (function() {
    var ua = navigator.userAgent,
             iStuff = ua.match(/iPhone/i) || ua.match(/iPad/i),
             typeOfCanvas = typeof HTMLCanvasElement,
             nativeCanvasSupport = (typeOfCanvas == 'object' || typeOfCanvas == 'function'),
             textSupport = nativeCanvasSupport && (typeof document.createElement('canvas').getContext('2d').fillText == 'function');
    // I'm setting this based on the fact that ExCanvas provides text support for IE
    // and that as of today iPhone/iPad current text support is lame
    labelType = (!nativeCanvasSupport || (textSupport && !iStuff))? 'Native' : 'HTML';
    nativeTextSupport = labelType == 'Native';
    useGradients = nativeCanvasSupport;
    animate = !(iStuff || !nativeCanvasSupport);
  })();

  // init TreeMap
  var treeMap = new $jit.TM.Squarified({
    injectInto: 'treemap-display',
    levelsToShow: 1,
    titleHeight: 32,
    animate: animate,
    offset: 0,
    cushion: useGradients,
    duration: 500,
    Label: {
      type: "HTML", // "HTML", "Native" labelType,
      size: 14,
      family: "Ubuntu"
    },
    Node: {
      CanvasStyles: {
        shadowBlur: 0,
        shadowColor: '#000'
      }
    },
    Events: {
      enable: true,
      onClick: function(node) {
        if (node) {
          var count = 0;
          node.eachSubnode(function(){
            count++;
          });
          if (count > 0) {
            treeMap.enter(node);
          }       
        }
      },
      onRightClick: function() {
        treeMap.out();
      } /*,
       
      // only applicable for `Native` label type 
      onMouseEnter: function(node, eventInfo) {
        if (node) {
          node.setCanvasStyle('shadowBlur', 7);
          treeMap.fx.plotNode(node, treeMap.canvas);
          treeMap.labels.plotLabel(treeMap.canvas, node);
        }
      },
      onMouseLeave: function(node) {
        if (node) {
          node.removeCanvasStyle('shadowBlur');
          treeMap.plot();
        }
      } */
      
    },
    
    // only applicable for `HTML` label type
    onCreateLabel: function(domElement, node) {

      domElement.innerHTML = '<div class="node_label">' + node.name + '</div>';
  
      $(domElement).qtip({content: node.data['title'], position: { corner: { target: 'center', tooltip: 'center' } } });

      var style = domElement.style;
      style.display = '';
      style.border = '1px solid transparent';
      style.color = 'white';
      domElement.onmouseover = function() {
        style.border = '1px solid #9FD4FF';
      };
      domElement.onmouseout = function() {
        style.border = '1px solid transparent';
      };
    }
  });

  treeMap.loadJSON(json);
  treeMap.refresh();

  $jit.util.addEvent($jit.id('go_to_parent'), 'click', function() {
    treeMap.out();
  });
  
</script>


